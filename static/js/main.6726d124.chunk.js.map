{"version":3,"sources":["components/head/headStyles.ts","components/head/Head.tsx","components/container/containerStyles.ts","components/container/Container.tsx","components/content/contentStyles.ts","components/content/Content.tsx","components/spinner/spinnerStyles.ts","components/spinner/spinner.tsx","pages/apodPage/ApodPage.tsx","hooks/useFetchApod/useFetchApod.ts","components/backToTop/backToTopStyles.ts","components/backToTop/BackToTop.tsx","components/imageContainer/imageContainerStyles.ts","components/imageContainer/ImageContainer.tsx","pages/hubblePage/HubblePage.tsx","hooks/useFetchHubble/useFetchHubble.ts","pages/homePage/homePageStyles.ts","pages/homePage/HomePage.tsx","pages/expPage/ExpPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledHead","styled","div","StyledAppTitle","Link","StyledOptions","StyledOption","Head","to","StyledContainer","Container","children","StyledContentContainer","StyledContent","StyledImage","img","StyledIFrame","iframe","StyledContentFooter","Content","data","copyright","date","explanation","url","hdurl","media_type","title","src","allowFullScreen","alt","StyledSpinnerOverlay","StyledSpinnerContainer","Spinner","ApodPage","useState","setData","isLoading","setLoading","useEffect","a","fetch","res","json","getData","useFetchApod","StyledTopButton","BackToTop","onClick","window","scroll","StyledImageContainer","StyledHubbleImage","StyledIMG","ImageContainer","collection","items","map","i","links","h","pathname","state","href","HubblePage","keywords","date_created","description","nasa_id","center","description_508","secondary_creator","render","rel","rawImageData","getImageData","useFetchHubble","StyledDarkBanner","StyledInnerContainer","StyledTitle","h1","StyledSubTitle","StyledSubComment","p","StyledGetStarted","StyledLink","HomePage","className","ExpPage","location","useLocation","originalImage","setOriginalImage","link","ImageArray","getImage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6726d124.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledHead = styled.div`\r\n  height: 48px;\r\n  margin: 1%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 25px;\r\n  align-items: center;\r\n  border: #303846 2px solid;\r\n  border-radius: 4px;\r\n  padding: 0.4%;\r\n  color: #303846;\r\n`;\r\n\r\nexport const StyledAppTitle = styled(Link)`\r\n  font-size: x-large;\r\n  font-variant: all-small-caps;\r\n  font-weight: 500;\r\n  color: #303846;\r\n\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport const StyledOptions = styled.div`\r\n  display: flex;\r\n  font-size: large;\r\n  font-weight: 400;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const StyledOption = styled(Link)`\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {\r\n  StyledHead,\r\n  StyledAppTitle,\r\n  StyledOptions,\r\n  StyledOption,\r\n} from './headStyles';\r\n\r\nconst Head: React.FC = () => {\r\n  return (\r\n    <StyledHead>\r\n      <StyledAppTitle to='/'>Nasa API</StyledAppTitle>\r\n      <StyledOptions>\r\n        <StyledOption to='/apod'>APOD</StyledOption>\r\n        <StyledOption to='/hubble'>Hubble Space Telescope</StyledOption>\r\n        {/*<StyledOption to='/exoplanet'>Exoplanet</StyledOption>*/}\r\n      </StyledOptions>\r\n    </StyledHead>\r\n  );\r\n};\r\n\r\nexport default Head;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledContainer = styled.div`\r\n  margin: 1%;\r\n`;\r\n","import React from 'react';\r\nimport { StyledContainer } from './containerStyles';\r\n\r\ntype Props = {\r\n  children: JSX.Element;\r\n};\r\n\r\nconst Container: React.FC<Props> = ({ children }) => {\r\n  return <StyledContainer>{children}</StyledContainer>;\r\n};\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledContentContainer = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1140px;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledContent = styled.div`\r\n  padding-right: inherit;\r\n  padding-left: inherit;\r\n  display: flex;\r\n`;\r\n\r\nexport const StyledImage = styled.img`\r\n  padding-left: inherit;\r\n  width: 700px;\r\n  height: 440px;\r\n`;\r\n\r\nexport const StyledIFrame = styled.iframe`\r\n  border: none;\r\n  height: 440px;\r\n  padding-left: inherit;\r\n`;\r\n\r\nexport const StyledContentFooter = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n`;\r\n","import React from 'react';\r\nimport { ApodData } from '../../types/pagesTypes/pagesTypes';\r\nimport {\r\n  StyledContent,\r\n  StyledContentContainer,\r\n  StyledContentFooter,\r\n  StyledIFrame,\r\n  StyledImage,\r\n} from './contentStyles';\r\n\r\ninterface IProps {\r\n  data: ApodData;\r\n}\r\n\r\nconst Content: React.FC<IProps> = ({ data }) => {\r\n  const { copyright, date, explanation, url, hdurl, media_type, title } = data;\r\n  return (\r\n    <StyledContentContainer>\r\n      <h1>{title}</h1>\r\n      <p>{date}</p>\r\n      <h4>Explanation : </h4>\r\n      <StyledContent>\r\n        <p>{explanation}</p>\r\n        {media_type === 'video' ? (\r\n          <StyledIFrame src={`${url}`} title='video' allowFullScreen={true} />\r\n        ) : (\r\n          <StyledImage alt='img' src={`${hdurl}`} />\r\n        )}\r\n      </StyledContent>\r\n      <StyledContentFooter>{copyright}</StyledContentFooter>\r\n    </StyledContentContainer>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledSpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { StyledSpinnerContainer, StyledSpinnerOverlay } from './spinnerStyles';\r\n\r\nconst Spinner: React.FC = () => {\r\n  return (\r\n    <StyledSpinnerOverlay>\r\n      <StyledSpinnerContainer />\r\n    </StyledSpinnerOverlay>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport Container from '../../components/container/Container';\r\nimport Content from '../../components/content/Content';\r\nimport Spinner from '../../components/spinner/spinner';\r\nimport { useFetchApod } from '../../hooks/useFetchApod/useFetchApod';\r\n\r\nconst ApodPage: React.FC = () => {\r\n  const { data, isLoading } = useFetchApod();\r\n  return (\r\n    <Container>{!isLoading ? <Content data={data} /> : <Spinner />}</Container>\r\n  );\r\n};\r\n\r\nexport default ApodPage;\r\n","import { useEffect, useState } from 'react';\r\nimport { ApodData } from '../../types/pagesTypes/pagesTypes';\r\n\r\nexport const useFetchApod = () => {\r\n  const initialValues = {\r\n    copyright: '',\r\n    date: '',\r\n    explanation: '',\r\n    url: '',\r\n    hdurl: '',\r\n    media_type: '',\r\n    title: '',\r\n  };\r\n  const [data, setData] = useState<ApodData>(initialValues);\r\n  const [isLoading, setLoading] = useState<Boolean>(true);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const res = await fetch(\r\n        `https://api.nasa.gov/planetary/apod?api_key=2m7fwrtUFQiYaZEy2hldxm29bBlAIswXrEjZ2k6E&hd=true`\r\n      );\r\n      const {\r\n        copyright,\r\n        date,\r\n        explanation,\r\n        url,\r\n        hdurl,\r\n        media_type,\r\n        title,\r\n      } = await res.json();\r\n      setData({ copyright, date, explanation, url, hdurl, media_type, title });\r\n      setLoading(false);\r\n    };\r\n\r\n    getData();\r\n  }, []);\r\n  return { data, isLoading };\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledTopButton = styled.div`\r\n  cursor: pointer;\r\n  margin-left: 50%;\r\n  text-align: center;\r\n  background-color: white;\r\n  width: 8%;\r\n  border: 2px solid #303846;\r\n  border-radius: 4px;\r\n  padding: 2px;\r\n  transition: color 0.4s cubic-bezier(0.08, 0.52, 0.52, 1),\r\n    background 0.4s cubic-bezier(0.08, 0.52, 0.52, 1),\r\n    border-color 0.4s cubic-bezier(0.08, 0.52, 0.52, 1);\r\n\r\n  &:hover {\r\n    background-color: #303846;\r\n    color: white;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { StyledTopButton } from './backToTopStyles';\r\n\r\nconst BackToTop: React.FC = () => {\r\n  return (\r\n    <StyledTopButton onClick={() => window.scroll(0, 0)}>\r\n      Back To Top\r\n    </StyledTopButton>\r\n  );\r\n};\r\n\r\nexport default BackToTop;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledImageContainer = styled.div`\r\n  columns: 5;\r\n  column-gap: 4px;\r\n  @media (max-width: 1200px) {\r\n    columns: 4;\r\n  }\r\n  @media (max-width: 992px) {\r\n    columns: 3;\r\n  }\r\n  @media (max-width: 768px) {\r\n    columns: 2;\r\n  }\r\n`;\r\n\r\nexport const StyledHubbleImage = styled.div`\r\n  .grid {\r\n    display: inline-block;\r\n    margin-bottom: 4px;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const StyledIMG = styled.img`\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    opacity: 0.7;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ImageData } from '../../types/pagesTypes/pagesTypes';\r\nimport {\r\n  StyledHubbleImage,\r\n  StyledImageContainer,\r\n  StyledIMG,\r\n} from './imageContainerStyles';\r\n\r\ninterface IProps {\r\n  data: ImageData;\r\n}\r\n\r\nconst ImageContainer: React.FC<IProps> = ({ data }) => {\r\n  return (\r\n    <StyledImageContainer>\r\n      {data.collection.items.map((i) =>\r\n        i.links.map((h) => (\r\n          <StyledHubbleImage key={i.href}>\r\n            <Link\r\n              to={{\r\n                pathname: '/exp',\r\n                state: { data: i.data, links: i.href },\r\n              }}\r\n            >\r\n              <StyledIMG src={`${h.href}`} alt='img' />\r\n            </Link>\r\n          </StyledHubbleImage>\r\n        ))\r\n      )}\r\n    </StyledImageContainer>\r\n  );\r\n};\r\n\r\nexport default ImageContainer;\r\n","import React from 'react';\r\nimport BackToTop from '../../components/backToTop/BackToTop';\r\nimport Container from '../../components/container/Container';\r\nimport ImageContainer from '../../components/imageContainer/ImageContainer';\r\nimport Spinner from '../../components/spinner/spinner';\r\nimport { useFetchHubble } from '../../hooks/useFetchHubble/useFetchHubble';\r\n\r\nconst HubblePage: React.FC = () => {\r\n  const { data, isLoading } = useFetchHubble();\r\n  return (\r\n    <Container>\r\n      {!isLoading ? (\r\n        <>\r\n          <ImageContainer data={data} />\r\n          <BackToTop />\r\n        </>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HubblePage;\r\n","import { useEffect, useState } from 'react';\r\nimport { ImageData } from '../../types/pagesTypes/pagesTypes';\r\n\r\nexport const useFetchHubble = () => {\r\n  const [data, setData] = useState<ImageData>({\r\n    collection: {\r\n      items: [\r\n        {\r\n          href: '',\r\n          data: [\r\n            {\r\n              media_type: '',\r\n              keywords: [''],\r\n              date_created: '',\r\n              description: '',\r\n              nasa_id: '',\r\n              center: '',\r\n              title: '',\r\n              description_508: '',\r\n              secondary_creator: '',\r\n            },\r\n          ],\r\n          links: [\r\n            {\r\n              href: '',\r\n              render: '',\r\n              rel: '',\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  });\r\n  const [isLoading, setLoading] = useState<Boolean>(true);\r\n  useEffect(() => {\r\n    const getImageData = async () => {\r\n      const res = await fetch(\r\n        'https://images-api.nasa.gov/search?q=hubble&page=1&media_type=image&year_start=1920&year_end=2020'\r\n      );\r\n      const rawImageData = await res.json();\r\n      setData(rawImageData);\r\n      setLoading(false);\r\n    };\r\n    getImageData();\r\n  }, []);\r\n\r\n  return { data, isLoading };\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledDarkBanner = styled.div`\r\n  padding: 2.5rem 0;\r\n  text-align: center;\r\n  position: relative;\r\n  overflow: hidden;\r\n  background-color: #303846;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const StyledInnerContainer = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1140px;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n  font-size: 3rem;\r\n`;\r\n\r\nexport const StyledSubTitle = styled.div`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const StyledSubComment = styled.p`\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const StyledGetStarted = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  background-color: transparent;\r\n  border: 1px solid #09d3ac;\r\n  border-radius: 0.4rem;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  color: #09d3ac;\r\n  line-height: 1.5;\r\n  padding: 0.375rem 1.5rem;\r\n  text-align: center;\r\n  transition: color 0.4s cubic-bezier(0.08, 0.52, 0.52, 1),\r\n    background 0.4s cubic-bezier(0.08, 0.52, 0.52, 1),\r\n    border-color 0.4s cubic-bezier(0.08, 0.52, 0.52, 1);\r\n\r\n  &:hover {\r\n    background-color: #09d3ac;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport Container from '../../components/container/Container';\r\nimport {\r\n  StyledDarkBanner,\r\n  StyledInnerContainer,\r\n  StyledTitle,\r\n  StyledSubTitle,\r\n  StyledSubComment,\r\n  StyledGetStarted,\r\n  StyledLink,\r\n} from './homePageStyles';\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <StyledDarkBanner>\r\n        <StyledInnerContainer>\r\n          <StyledTitle>Nasa API</StyledTitle>\r\n          <StyledSubTitle>\r\n            Nasa API\r\n            <StyledSubComment>\r\n              To learn and see the astronomy photo of the day ...\r\n            </StyledSubComment>\r\n          </StyledSubTitle>\r\n          <StyledGetStarted>\r\n            <StyledLink className='link' to='/apod'>\r\n              Astronomy Photo Of The Day\r\n            </StyledLink>\r\n          </StyledGetStarted>\r\n        </StyledInnerContainer>\r\n      </StyledDarkBanner>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Container from '../../components/container/Container';\r\nimport { ExpData } from '../../types/pagesTypes/pagesTypes';\r\n\r\nconst ExpPage: React.FC = () => {\r\n  const location = useLocation<ExpData>();\r\n  const data = location.state.data[0];\r\n  const [originalImage, setOriginalImage] = useState<string>();\r\n  const link = location.state.links;\r\n  useEffect(() => {\r\n    const getImage = async () => {\r\n      const res = await fetch(link);\r\n      const ImageArray = await res.json();\r\n      setOriginalImage(ImageArray[0]);\r\n    };\r\n\r\n    getImage();\r\n  }, [link]);\r\n  return (\r\n    <Container>\r\n      <>\r\n        <h1>{data.title}</h1>\r\n        <div>\r\n          <p>{data.description}</p>\r\n          <img src={originalImage} alt='img' />\r\n        </div>\r\n      </>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ExpPage;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Head from './components/head/Head';\nimport ApodPage from './pages/apodPage/ApodPage';\nimport HubblePage from './pages/hubblePage/HubblePage';\nimport HomePage from './pages/homePage/HomePage';\nimport ExpPage from './pages/expPage/ExpPage';\n\nconst App: React.FC = () => {\n  return (\n    <div className='App'>\n      <Head />\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route path='/apod' component={ApodPage} />\n        <Route path='/hubble' component={HubblePage} />\n        <Route path='/exp' component={ExpPage} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}